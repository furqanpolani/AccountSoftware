extends ../layout

block content
    section#contact
        div.animated.bounceInUp
            section#content
                .panel.mb25.mt5#newPurchases.p20.admin-form.hidden
                    .panel-body.pb10
                        .section.row
                            .section.row.mb15
                                .col-xs-6
                                    label.field.prepend-icon(for='title')
                                        input#title.event-name.gui-input.br-light.light(type='text' required placeholder='Enter movie name here')
                                        label.field-icon(for='title')
                                            i.fa.fa-user
                                .col-xs-6
                                    label.field.prepend-icon(for='description')
                                        input#description.event-name.gui-input.br-light.bg-light(type='text' placeholder='Enter description here')
                                        label.field-icon(for='description')
                                            i.fa.fa-envelope-o
                            
                            .section.row.mb15
                                .col-xs-6
                                    label.field.prepend-icon(for='quantity')
                                        input#quantity.form-control(type='number' min="0" placeholder='Quantity')
                                        label.field-icon(for='quantity')
                                            i.fa.fa-money
                                .col-xs-6
                                    label.field.prepend-icon(for='cost')
                                        input#cost.form-control(type='number' min="0" placeholder='cost')
                                        label.field-icon(for='cost')
                                            i.fa.fa-money
                                
                            .section.row.mb15
                                .col-xs-3
                                        label.field.prepend-icon(for='venderName')
                                            input#venderName.event-name.gui-input.br-light.light(type='text' required placeholder='venderName')
                                            label.field-icon(for='venderName')
                                                i.fa.fa-user
                                .col-xs-4
                                    label.field.prepend-icon(for='venderPhone')
                                        input#venderPhone.event-name.gui-input.br-light.light(type='tel' required placeholder='venderPhone')
                                        label.field-icon(for='venderPhone')
                                            i.fa.fa-user
                                .col-xs-5
                                    label.field.prepend-icon(for='venderAddress')
                                        input#venderAddress.event-name.gui-input.br-light.light(type='text' required placeholder='venderAddress')
                                        label.field-icon(for='venderAddress')
                                            i.fa.fa-user  
                                
                                
                            .pull-right
                                button.btn.ladda-button.btn-dark.progress-button.progress-button(type='button' onclick="addPurchase()" data-style='expand-right')
                                    span.ladda-label Save
                                    span.ladda-spinner
                                    span.ladda-spinner
                                    .ladda-progress

                                button.btn.ml10.ladda-button.btn-danger.progress-button.progress-button#cancel(type='button', data-style='expand-right')
                                    span.ladda-label Cancel
                                    span.ladda-spinner
                                    span.ladda-spinner
                                    .ladda-progress

                                
                                
                .panel
                    header#topbar.ph10
                        .topbar-right.hidden-xs.hidden-sm
                            a.btn.btn-default.btn-sm.light.fw600.ml10#addingPurchases
                                span.fa.fa-user.pr5
                                |  Add Purchase
                        .row
                            .col-md-4                            
                    .panel-body.pn
                        .table-responsive
                            table#contactList.table.admin-form.theme-warning.tc-checkbox-1.fs13
                                thead
                                    tr.bg-light
                                        th Title
                                        th Cost
                                        th Description
                                        th Action
                                tbody
                                    
                                    each r,index in result.completeData.data   
                                    
                                        tr
                                            td #{r.Movie.title}
                                            td #{r.cost}
                                            td #{r.description}
                                            td.text-right
                                                .btn-group.text-right
                                                    button.btn.btn-success.br2.btn-xs.fs12.dropdown-toggle(type='button', data-toggle='dropdown', aria-expanded='false')
                                                        | menu
                                                        span.caret.ml5
                                                    ul.dropdown-menu(role='menu')
                                                        li
                                                            a.edit(href='#' onclick='edit(\'' + index + '\')' ) Edit
                                                        li
                                                            a(href='#' onclick='del(\'' + index + '\')' ) Delete

                                    
                                    
                                        

            //- div.col-md-12
            //-     div.panel.panel-visible#spy2
            //-         div.panel-heading
            //-             div.panel-title.hidden-xs Purchase List
            //-         div.panel-body.pn.table-responsive
            //-             table.table.table-striped.table-hover#contactList(cellspacing="0" width="100%")
            //-                 thead
            //-                     tr
            //-                         th ID
            //-                         th Description 
            //-                         th Purchased By
            //-                         th Vender
            //-                         th Cost 
            //-                         th Quantity
            //-                 tbody
            //-                     each result in data
            //-                         tr
            //-                             td.text-info.pr10
            //-                                 a(href="/contacts/contact/#{result.id}") #{result.id}
            //-                             td #{result.description}
            //-                             td #{result.Employee.name}
            //-                             td #{result.venderName}
            //-                             td #{result.cost}
            //-                             td #{result.quantity}
                                        
            //-                             t

        include ../endScript.html

    script.
        //variable for balance saving 
        var totalBalance;
        var idForBalance; 
        var balanceFromDatabase;
        var data = !{JSON.stringify(result.completeData.data)}
        console.log( 'data is', data)
        

        $('#addingPurchases').click(function(){
            //- $('#newRentals').removeClass('hidden')
            $('#newPurchases').removeClass('hidden')
            $('#addingPurchases').addClass('hidden')
        });
        $('#cancel').click(function(){
            $('#newPurchases').addClass('hidden')
            $('#addingPurchases').removeClass('hidden')
        });

        // Movie title auto complete
        var movieTitle = !{JSON.stringify(result.lookupData.data.movieTitle)}
        console.log('customer name and its data is :', movieTitle)
        
        var movieTitleId;

        $('#title').autocomplete({
                source: movieTitle,
                change: function (event, ui)
                        {   movieTitleId = ui.item.data.id
                            console.log('movie Title Id is ', movieTitleId)
                            alert(ui)
                        } 
                        
            //-     autoSelectFirst: true,
            //-     showNoSuggestionNotice: true        
        })
        
        //- var purchaseList = {
        //-     movieTitle: $('#title').val(),
        //-     description: $('#description').val(),
        //-     cost: $('#cost').val(),
        //-     quantity: $('#quantity').val(),
        //-     venderName: $('#venderName').val(),
        //-     venderAddress: $('#venderAddress').val(),
        //-     venderPhoneNumber:$('#phone').val()
        //- }
        //- var movieList = {
        //-     title: $('#title').val(),
        //-     description: $('#description').val(),
        //-     artURL: $('#URL').val()
            
        //- }
        
        var editedData ; 
        var editFlag = false;
        function edit(id) {
            console.log("result is ", id)
            editedData = data[id]
            editFlag = true
            console.log('edit is clicked', editedData)
            $('#title').val(editedData.Movie.title)
            $('#description').val(editedData.description)
            $('#cost').val(editedData.cost)
            $('#quantity').val(editedData.quantity)
            $('#venderName').val(editedData.venderName)
            $('#venderAddress').val(editedData.venderAddress)
            $('#phone').val(editedData.venderPhoneNumber) 
            console.log(editedData)
            movieTitleId = editedData.MovieId
            $('#newPurchases').removeClass('hidden')
        }
        //save Button functioning
        function addPurchase(){
            console.log('add purchase Started')
            //getting data from user
            var userEntry = {  
                MovieId: movieTitleId,
                description: $('#description').val(),
                cost: $('#cost').val(),
                quantity: $('#quantity').val(),
                venderName: $('#venderName').val(),
                venderAddress: $('#venderAddress').val(),
                venderPhoneNumber:$('#phone').val()
        }
            //  editing existing purchase 
            if(editFlag == true){
        
                console.log('user Entry is ', userEntry)
                console.log('id is : ', editedData.id)
                editFlag = false
                $.ajax({
                    type: "PUT",
                    url: '/api/purchaseUpdate/'+ editedData.id,
                    data: userEntry,
                    dataType: "json",
                    success: function(result){
                        if(result.status){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Purchase', 'Purchase Created', 'success')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/purchases"
                        })
                        
                    }
                    },
                    error: function(err){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Purchase', 'Purchase not Created', 'error')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/purchases"
                        })
                    }
                });
                
            }
            //  Creating new purchase
            else{
                // working for balance ajax
                //- movieTitle.forEach ((element) =>{
                //-     if(element.data.id == movieTitleId){
                //-         balanceFromDatabase = element.data.balance
                //-     }
                //-     totalBalance = balanceFromDatabase + parseInt(userEntry.quantity)
                //-     console.log('totalBalance is: ', totalBalance)
                //- })
                
                //- balanceEntry = {
                //-     balance: totalBalance
                //- }
                //- console.log('The quantity to add is : ', totalBalance)
                //- $.ajax({
                //-     type: "PUT",
                //-     url: '/api/movieUpdate/'+movieTitleId,
                //-     data: balanceEntry,
                //-     dataType: "json",
                //-     success: function(result){
                //-     if(result.status){
                //-         return new Promise ((resolve, reject) =>{
                //-             showNotify('Balance', 'Balance Added', 'success')
                //-             resolve()
                //-         }).then(()=>{
                //-             //- window.location.href = "/movies"
                //-         })
                        
                //-     }
                
                //- },
                //-     error: function(err){
                //-         return new Promise ((resolve, reject) =>{
                //-             showNotify('Balance', 'Balance not Updated', 'error')
                //-             resolve()
                //-         }).then(()=>{
                //-             //- window.location.href = "/movies"
                //-         })
                //-     }
                //- });




                console.log(userEntry);
                $.ajax({
                    type: "POST",
                    url: '/api/purchase',
                    data: userEntry,
                    dataType: "json",
                    success: function(result){
                        if(result.status){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Purchase', 'Purchase Created', 'success')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/purchases"
                        })
                        
                    }
                    },
                    error: function(err){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Purchases', 'Purchases not Updated', 'error')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/Purchases"
                        })
                    }
                }); 
            

            } 
        }



        //deleting purchase list
        function del(index){
            console.log(index)
            let purchase = data[index]
            let id = purchase.id
            swal({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                  confirmButtonText: 'Yes, delete it!'
            }).then((result) =>{
                if(result.value){
                    $.ajax({
                        type: "DELETE",
                        url: '/api/purchase/'+id,
                        data: "purchase",
                        dataType: "json",
                        success: function(res){
                            if(res.status){
                                swal(
                                    'Deleted!',
                                    'Your file has been deleted.',
                                    'success'
                                ).then(() =>{
                                    window.location.href = '/purchases'
                                })  
                            }
                        
                        },
                        error: function(err){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Purchases', 'Purchases not Created', 'error')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/purchases"
                        })
                    }
                    })

                }
            })
        }
            
        jQuery(document).ready(function() {

            $('#contactList').dataTable({
              "aoColumnDefs": [{
                'bSortable': false
              }],
              "oLanguage": {
                "oPaginate": {
                  "sPrevious": "",
                  "sNext": ""
                }
              },
              "iDisplayLength": 15,
              "aLengthMenu": [
                [15, 25, 35, 50, -1],
                [15, 25, 35, 50, "All"]
              ],
              "sDom": '<"dt-panelmenu clearfix"lfr>t<"dt-panelfooter clearfix"ip>'
            });

            


        });
