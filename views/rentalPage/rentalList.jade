extends ../layout

block content
    section#contact
        div.animated.bounceInUp
            section#content.table-layout
                div.tray.tray-center(style='height: 311px;')
                    div.panel.mb25.mt5#newRentals.p20.admin-form.hidden
                        div.section.row.mbn.p20
                            div.section.row.mb15 
                                label.field.prepend-icon(for='customerName')
                                    input#customerName.event-name.gui-input.br-light.light(type='text' required placeholder='Enter customer Name here')
                                    label.field-icon(for='customerName')
                                        i.fa.fa-user
                            div.section.row.mb15
                                
                                label.field.prepend-icon(for='movieTitle')
                                    input#movieTitle.event-name.gui-input.br-light.light(type='text' required placeholder='Enter movie name here')
                                    label.field-icon(for='movieTitle')
                                        i.fa.fa-user
                            div.section.row.mb15
                                label.field.prepend-icon(for='dueDate')
                                    input#dueDate.event-name.gui-input.br-light.bg-light(type='text' placeholder='Enter due date')
                                    label.field-icon(for='dueDate')
                                        i.fa.fa-envelope-o
                            div.section.row.mb15
                                    label.field.prepend-icon(for='rentAmount')
                                        input#rentAmount.event-name.gui-input.br-light.light(type='number'  min="0" placeholder='rent Amount')
                                        label.field-icon(for='rentAmount')
                                            i.fa.fa-user
                            div.section.row.mb15
                                label.field.prepend-icon(for='paidStatus')
                                    select.form-control#paidStatus
                                        option#paid1 Unpaid
                                        option#paid2 paid
                                    label.field-icon(for='paidStatus')
    
        



                            div.pull-right
                                button.btn.ladda-button.btn-dark.progress-button.progress-button(type='button' onclick="addRental()" data-style='expand-right')
                                    span.ladda-label Save
                                    span.ladda-spinner
                                    span.ladda-spinner
                                    .ladda-progress

                                button.btn.ml10.ladda-button.btn-danger.progress-button.progress-button#cancel(type='button', data-style='expand-right')
                                    span.ladda-label Cancel
                                    span.ladda-spinner
                                    span.ladda-spinner
                                    .ladda-progress


                        //existing customer Button 
                    div.panel#addingCustomer.mb25.mt5.hidden
                        .panel-body.p20.pb10
                            .tab-content.pn.br-n.admin-form
                                #tab1_1.tab-pane.active
                                    .section.row.mbn 
                                        .section.row.mb15

                                            
                                        button#existingCustomer.btn.btn.ml10.btn-dark.btn-gradient.progress-button.progress-button(type='button' data-style='expand-right')
                                            span.ladda-label Existing Customer
                                            span.ladda-spinner
                                            span.ladda-spinner
                                            .ladda-progress
                                        button#newCustomer.btn.btn.ml10.btn-dark.btn-gradient.progress-button.progress-button(type='button', data-style='expand-right')
                                            span.ladda-label New Customer
                                            span.ladda-spinner
                                            span.ladda-spinner
                                            .ladda-progress                       
                                    
                                #tab1_3.tab-pane
                                    
                    div.panel
                        header#topbar.ph10
                            div.topbar-right.hidden-xs.hidden-sm
                                a.btn.btn-default.btn-sm.light.fw600.ml10#addingRentals
                                    span.fa.fa-user.pr5
                                    |  Add Rental
                            div.row

                                div.col-md-4  
                        div.panel-body.pn
                            div.table-responsive
                                table.table.admin-form.theme-warning.tc-checkbox-1.fs13#contactList
                                    thead
                                        tr.bg-light
                                            th Customer Name
                                            th Title
                                            th Rented By
                                            th Amount
                                            th Movie Status 
                                            th Payment
                                            th Due Date
                                            th Action
                                    tbody
                                        each b,index in result.completeData.data   
                                            tr
                                                td #{b.Customer.name}
                                                td #{b.Movie.title}
                                                td #{b.Employee.name} commented for testing
                                                //- td #{'testing'}
                                                td #{b.rentAmount}
                                                td #{b.returnStatus}
                                                td #{b.rentStatus}
                                                td #{b.dueDate}

                                                td.text-right
                                                    .btn-group.text-right
                                                        button.btn.btn-success.br2.btn-xs.fs12.dropdown-toggle(type='button', data-toggle='dropdown', aria-expanded='false')
                                                            | menu
                                                            span.caret.ml5
                                                        ul.dropdown-menu(role='menu')
                                                            li
                                                                a( onClick = 'edit(\'' + index + '\')') Edit
                                                            li
                                                                a( onclick='del(\'' + index + '\')' ) Delete


            //- div.col-md-12
            //-     div.panel.panel-visible#spy2
            //-         div.panel-heading
            //-             div.panel-title.hidden-xs Rent List                                
            //-                 .switch.switch-info.switch-inline
            //-                     input#returnStatus(type='checkbox' )
            //-                     label(for='returnStatus')
            //-                 .pull-right
            //-                     button#addRentals.btn.ladda-button.btn-info.btn-primary(type='button' )
            //-                         span.ladda-label Add Rental
            //-                         span.ladda-spinner
            //-                         .ladda-progress
                                    
                                   

            //-                 //- label.radio-inline.mr10
            //-                 //-     input#returnStatus(type='radio'  name='returnStatus' value='radioButton' )
            //-                 //-     | returned
            //-                 //- label.radio-inline.mr10(name='radioButton')
            //-                 //-     input#returnStatus(type='radio'  name='returnStatus', value='radioButton')
            //-                 //-     | not returned
            //-                 //-     //- &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            //-                 //- label.radio-inline.mr10(name='radioButton')   
            //-                 //-     input#paidStatus(type='radio', name='rentStatus', value='option1')
            //-                 //-     | paid
            //-                 //- label.radio-inline.mr10
            //-                 //-     input#paidStatus(type='radio', name='rentStatus', value='option2')
            //-                 //-     | unpaid

            //-         div.panel-body.pn.table-responsive
            //-             table.table.table-striped.table-hover#contactList(cellspacing="0" width="100%")
            //-                 thead
            //-                     tr
            //-                         th Customer Name
            //-                         th Title
            //-                         th Rented By
            //-                         th Amount
            //-                         th Movie Status 
            //-                         th Payment
            //-                         th Due Date
                                    

            //-                 tbody
            //-                     each result in data
            //-                         tr

            //-                             td #{result.Customer.name}
            //-                             td #{result.Movie.title}
            //-                             td #{result.Employee.name}
            //-                             td #{result.rentAmount}
            //-                             td #{result.returnStatus}
            //-                             td #{result.rentStatus}
            //-                             td #{result.dueDate}
            //-                             td
            //-                                 .btn-group.open
            //-                                     button.dropdown-toggle(type='button', data-toggle='dropdown', aria-expanded='true')
            //-                                         span.caret.ml5
            //-                                     ul.dropdown-menu(role='menu')
            //-                                         li
            //-                                             a(href='#') update
            //-                                         li
            //-                                             a(href='#') delete
                                                   

                                    
                                    
                                    



        include ../endScript.html

    script.
        //date picker
        $( function() {
            $( "#dueDate" ).datepicker();
        });
        //default input values
        $('#rentAmount').val(500);
        policyDueDate = 6;
        var today = moment();
        var due = moment(today).add(policyDueDate, 'days')
        $('#dueDate').val(due) 


        //autoComplete for Input box (customer and movie)
        var customerName = !{JSON.stringify(result.lookupData.data.customerName)}
        console.log('customer name and its data is :', customerName)
        var movieTitle = !{JSON.stringify(result.lookupData.data.movieTitle)}
        console.log('customer name and its data is :', movieTitle)
        var customerInputId
        var movieTitleId 
        jQuery(document).ready(() =>{
            $('#customerName').autocomplete({
                source: customerName,
                change: function (event, ui)
                        {   customerInputId = ui.item.data.id
                            console.log(customerInputId)
                        } 
                        
            //-     autoSelectFirst: true,
            //-     showNoSuggestionNotice: true
                
            })
            $('#movieTitle').autocomplete({
                source: movieTitle,
                change: function (event, ui)
                        {   movieTitleId = ui.item.data.id
                            console.log(movieTitleId)
                        } 
                        
            //-     autoSelectFirst: true,
            //-     showNoSuggestionNotice: true
                
            })
        })        

        var editFlag = false;
        var data = !{JSON.stringify(result.completeData.data)}
        console.log(data)
        $('#addingRentals').click(function(){
            //- $('#newRentals').removeClass('hidden')
            $('#addingCustomer').removeClass('hidden')
            $('#addingRentals').addClass('hidden')
        });
        $('#newCustomer').click(function(){
            window.location.href='/customers'
        })
        $('#existingCustomer').click(function(){
            $('#addingCustomer').addClass('hidden')
            $('#newRentals').removeClass('hidden')
        })

        $('#cancel').click(function(){
            $('#newRentals').addClass('hidden')
            $('#addingCustomer').addClass('hidden')
            $('#addingRentals').removeClass('hidden')
            editFlag = false
        });
        // paid status 
        
        var editedData ;
        
        function edit(id) {
            //- console.log('edit function is working ')
            editedData = data[id]
            console.log('edited data is : ', editedData)
            editFlag = true;
            var paidStatus ; 
            if(editedData.rentPaidStatus){   
                paidStatus = $('#paid2').val();
            }
            else{
                paidStatus = $('#paid1').val()
            }
            
            //- var returnStatus = false
            //- if(editedData.rentReturnStatus){
            //-     returnStatus = true 
            //- }
            
            $('#customerName').val(editedData.Customer.name)
            $('#movieTitle').val(editedData.Movie.title)
            $('#dueDate').val(editedData.dueDate)
            $('#rentAmount').val(editedData.Movie.rentAmount)
            $('#paidStatus').val(paidStatus)
            console.log(editedData)
            $('#addingCustomer').addClass('hidden')
            $('#addingRentals').addClass('hidden')
            $('#newRentals').removeClass('hidden')
            movieTitleId = editedData.MovieId
          
        }

        function addRental(){
            console.log('add movie Started')
            var paidStatus = false
            if($('#paidStatus').val() == $('#paid2').val()){   
                paidStatus = true;
            }
            //getting data from user
            var userEntry = { 
                rentReturnStatus: false,
                rentPaidStatus: paidStatus,
                rentAmount: $('#rentAmount').val(),
                dueDate: $('#dueDate').val(),
                CustomerId: customerInputId,
                MovieId: movieTitleId
            }
            //  editing existing movie 
            if(editFlag){
                console.log('edit flag is also working ')
                console.log('user Entry is ', userEntry)
                console.log('id is : ', editedData.id)
                editFlag = false
                $.ajax({
                    type: "PUT",
                    url: '/api/rentalUpdate/'+editedData.id,
                    data: userEntry,
                    dataType: "json",
                    success: function(result){
                    if(result.status){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Rental', 'Rental not Updated', 'success')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/rentals"
                        })
                        
                    }
                
                },
                    error: function(err){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Rental', 'Rental not Updated', 'error')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/rentals"
                        })
                    }
                });
                
            }
            //  Creating new movie
            else{
                    
                console.log(userEntry);
                $.ajax({
                    type: "POST",
                    url: '/api/rental',
                    data: userEntry,
                    dataType: "json",
                    success: function(result){
                    if(result.status){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Rental', 'Rental Created', 'success')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/rentals"
                        })
                        
                    }
                
                },
                    error: function(err){
                        return new Promise ((resolve, reject) =>{
                            showNotify('Rental', 'Rental not Created', 'error')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/rentals"
                        })
                    }
                }); 
            

            } 
        }













        //- var data = !{JSON.stringify(data)}
        //- $('#addingRentals').click(function(){
        //-     //- $('#newRentals').removeClass('hidden')
        //-     $('#addingCustomer').removeClass('hidden')
        //-     $('#addingRentals').addClass('hidden')
        //- });
        //- $('#newCustomer').click(function(){
        //-     window.location.href='/customers'
        //- })
        //- $('#existingCustomer').click(function(){
        //-     $('#addingCustomer').addClass('hidden')
        //-     $('#newRentals').removeClass('hidden')
        //- })

        //- $('#cancel').click(function(){
        //-     $('#newRentals').addClass('hidden')
        //-     $('#addingCustomer').addClass('hidden')
        //-     $('#addingRentals').removeClass('hidden')
        //- });
        //- // paid status 
        //- var paidStatus = false
        //-     if($('#paidStatus').val() == $('#paid2').val()){   
        //-         paidStatus = true;
        //-     }



        //- var editedData ; 
        //- var editFlag = false;
        //- function edit(id) {
        //-     console.log("result is ", id)
        //-     editedData = data[id]
        //-     var paidStatus = false
        //-     if(editedData.rentPaidStatus){   
        //-         paidStatus = true;
        //-     }
        //-     editFlag = true
        //-     console.log('edit is clicked')
        //-     $('#CustomerName').val(editedData.Customer.name)
        //-     $('#MovieName').val(editedData.Movie.title)
        //-     $('#description').val(editedData.artUrl)
        //-     $('#rentAmount').val(editedData.Movie.rentAmount)
        //-     $('#paidStatus').val(editedData.rentAmount) 
        //-     console.log(editedData)
        //-     $('#movieForm').removeClass('hidden')
        //- }

        //- //save Button functioning
        //- function addMovie(){
        //-     console.log('add movie Started')
        //-     //getting data from user
        //-     var userEntry = {
        //-             title: $('#title').val(),
        //-             description: $('#description').val(),
        //-             artUrl: $('#URL').val(),
        //-             rentAmount: $('#rentAmount').val()
                    
        //-     }
        //-     //  editing existing movie 
        //-     if(editFlag == true){
        
        //-         console.log('user Entry is ', userEntry)
        //-         console.log('id is : ', editedData.id)
        //-         editFlag = false
        //-         $.ajax({
        //-             type: "PUT",
        //-             url: '/api/movieUpdate/'+editedData.id,
        //-             data: userEntry,
        //-             dataType: "json",
        //-             success: function(result){
        //-                 if (result.status){
        //-                     showNotify('Movie', 'Movie was Edited', 'success');
        //-                     window.location.href = "/movies"
        //-                 }
        //-             },
        //-             error: function(err){
        //-                 showNotify('Movie', 'Movie Not Edited', 'error');
        //-                 console.log(err)
        //-                 window.location.href = "/movies"
        //-             }
        //-         });
                
        //-     }
        //-     //  Creating new movie
        //-     else{
                    
        //-         console.log(userEntry);
        //-         $.ajax({
        //-             type: "POST",
        //-             url: '/api/movie',
        //-             data: userEntry,
        //-             dataType: "json",
        //-             success: function(result){
        //-                 if (result.status){
        //-                     showNotify('Movie', 'Movie was created', 'success');
        //-                     window.location.href = "/movies"
        //-                 }
        //-             },
        //-             error: function(err){
        //-                 showNotify('Movie', 'Movie Not Created', 'error');
        //-                 console.log(err)
        //-                 window.location.href = "/movies"
        //-             }
        //-         }); 
            

        //-     } 
        //- }




        //deleting rental
        function del(index){
            console.log(index)
            let rental = data[index]
            let id = rental.id

            swal({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                  confirmButtonText: 'Yes, delete it!'
            }).then((result) =>{
                if(result.value){
                    $.ajax({
                        type: "DELETE",
                        url: '/api/rental/'+id,
                        data: "rental",
                        dataType: "json",
                        success: function(res){ 
                            if(res.status){
                                swal(
                                    'Deleted!',
                                    'Your file has been deleted.',
                                    'success'
                                ).then(() =>{
                                    window.location.href = '/rentals'
                                })
                                
                            }
                        },
                        error: function(err){
                       return new Promise ((resolve, reject) =>{
                            showNotify('Rentals', 'Rentals not deleted', 'error')
                            resolve()
                        }).then(()=>{
                            window.location.href = "/rentals"
                        })
                        }
                    })
                }
            })    
        }

        //- $("#returnStatus").click(() =>{
        //-     switchStatus = $('#returnStatus').is(":checked");
        //-     console.log(switchStatus);
        //- })
        //- $("#addRentals").click(() =>{
        //-     window.location.href = "/rentals/addRentals"
        //- })

        
        
        
        //- $("#returnStatus").click(() =>{
        //-     switchStatus = $('#returnStatus').is(":checked");
        //-     window.location.href = "/rentals?returnStatus=" + switchStatus
        //- })
      
    

        
        jQuery(document).ready(function() {
            $('#contactList').dataTable({
              "aoColumnDefs": [{
                'bSortable': false
              }],
              "oLanguage": {
                "oPaginate": {
                  "sPrevious": "",
                  "sNext": ""
                }
              },
              "iDisplayLength": 15,
              "aLengthMenu": [
                [15, 25, 35, 50, -1],
                [15, 25, 35, 50, "All"]
              ],
              "sDom": '<"dt-panelmenu clearfix"lfr>t<"dt-panelfooter clearfix"ip>'
            });
        });